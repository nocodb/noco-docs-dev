"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[2926],{19306:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"fields/field-types/custom-types/json","title":"JSON","description":"JSON is a custom field type that allows you to store JSON data in a field. Useful for storing data that can be represented as a JSON object, like API Response, or a set of key-value pairs.","source":"@site/docs/070.fields/040.field-types/050.custom-types/080.json.md","sourceDirName":"070.fields/040.field-types/050.custom-types","slug":"/fields/field-types/custom-types/json","permalink":"/fields/field-types/custom-types/json","draft":false,"unlisted":false,"editUrl":"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/050.custom-types/080.json.md","tags":[{"inline":true,"label":"Fields","permalink":"/tags/fields"},{"inline":true,"label":"Field types","permalink":"/tags/field-types"},{"inline":true,"label":"Custom types","permalink":"/tags/custom-types"},{"inline":true,"label":"JSON","permalink":"/tags/json"}],"version":"current","sidebarPosition":80,"frontMatter":{"title":"JSON","tags":["Fields","Field types","Custom types","JSON"]},"sidebar":"tutorialSidebar","previous":{"title":"Specific DB type","permalink":"/fields/field-types/custom-types/specific-db-type"},"next":{"title":"Formula","permalink":"/category/formula"}}');var l=s(74848),n=s(28453);const o={title:"JSON",tags:["Fields","Field types","Custom types","JSON"]},d=void 0,a={},r=[{value:"Create a JSON field",id:"create-a-json-field",level:2},{value:"Cell display",id:"cell-display",level:3}];function c(e){const t={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"JSON"})," is a custom field type that allows you to store JSON data in a field. Useful for storing data that can be represented as a JSON object, like API Response, or a set of key-value pairs."]}),"\n",(0,l.jsx)(t.h2,{id:"create-a-json-field",children:"Create a JSON field"}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["Click on ",(0,l.jsx)(t.code,{children:"+"})," icon to the right of ",(0,l.jsx)(t.code,{children:"Fields header"})]}),"\n",(0,l.jsx)(t.li,{children:"On the dropdown modal, enter the field name (Optional)."}),"\n",(0,l.jsxs)(t.li,{children:["Select the field type as ",(0,l.jsx)(t.code,{children:"JSON"})," from the dropdown."]}),"\n",(0,l.jsx)(t.li,{children:"Configure default value for the field (Optional)"}),"\n",(0,l.jsxs)(t.li,{children:["Click on ",(0,l.jsx)(t.code,{children:"Save Field"})," button."]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.img,{alt:"image",src:s(60334).A+"",width:"2876",height:"1424"})}),"\n",(0,l.jsx)(t.h3,{id:"cell-display",children:"Cell display"}),"\n",(0,l.jsx)(t.p,{children:"Cell displays the JSON data stored in the field. Click on expand record icon to open the JSON data in an editor modal."})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>d});var i=s(96540);const l={},n=i.createContext(l);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(n.Provider,{value:t},e.children)}},60334:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/JSON-11cd3835058fadbd8e0bd98d8dd1fc50.png"}}]);