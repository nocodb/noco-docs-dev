"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[2039],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(96540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}},54838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"setup-and-usages/column-operations","title":"Column Operations","description":"Column Operations: Fields, Sort & Filter","source":"@site/versioned_docs/version-0.109.7/030.setup-and-usages/030.column-operations.md","sourceDirName":"030.setup-and-usages","slug":"/setup-and-usages/column-operations","permalink":"/0.109.7/setup-and-usages/column-operations","draft":false,"unlisted":false,"editUrl":"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/versioned_docs/version-0.109.7/030.setup-and-usages/030.column-operations.md","tags":[],"version":"0.109.7","sidebarPosition":30,"frontMatter":{"title":"Column Operations","description":"Column Operations: Fields, Sort & Filter"},"sidebar":"tutorialSidebar","previous":{"title":"Table Operations","permalink":"/0.109.7/setup-and-usages/table-operations"},"next":{"title":"Column Types","permalink":"/0.109.7/setup-and-usages/column-types"}}');var i=n(74848),o=n(28453);const r={title:"Column Operations",description:"Column Operations: Fields, Sort & Filter"},d=void 0,l={},a=[{value:"Fields",id:"fields",level:2},{value:"Re-order Columns",id:"re-order-columns",level:3},{value:"Hide / Unhide Columns",id:"hide--unhide-columns",level:3},{value:"Sort",id:"sort",level:2},{value:"Filter",id:"filter",level:2},{value:"Enable NULL and EMPTY Filters",id:"enable-null-and-empty-filters",level:3},{value:"Supported Filters",id:"supported-filters",level:3}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,i.jsxs)(t.p,{children:["Click ",(0,i.jsx)(t.code,{children:"Fields"})," to control the visibility of a field."]}),"\n",(0,i.jsx)("img",{width:"1262",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189098625-8b4930e7-9bb4-4e8f-aa44-d2a28a31abdb.png"}),"\n",(0,i.jsxs)(t.p,{children:["By default, all system fields will be hid. However, you can tick ",(0,i.jsx)(t.code,{children:"Show system fields"})," to make them visible."]}),"\n",(0,i.jsx)("img",{width:"1268",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189098684-4fe2ebfc-df00-40fc-8f3c-1d4d14a8fb23.png"}),"\n",(0,i.jsx)(t.h3,{id:"re-order-columns",children:"Re-order Columns"}),"\n",(0,i.jsxs)(t.p,{children:["Column positions can be re-ordered. Open ",(0,i.jsx)(t.code,{children:"Fields"})," menu, and re-order fields as needed by dragging and dropping the ",(0,i.jsx)(t.code,{children:"drag icon"}),"."]}),"\n",(0,i.jsx)("img",{width:"358",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189100445-d1a3816e-ddc0-4830-ba0a-a7b65597d264.png"}),"\n",(0,i.jsx)(t.h3,{id:"hide--unhide-columns",children:"Hide / Unhide Columns"}),"\n",(0,i.jsxs)(t.p,{children:["To hide / unhide columns, open ",(0,i.jsx)(t.code,{children:"Fields"})," menu, tick checkbox to keep the column visible, untick checkbox to remove it from the view."]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"You can create different grid views with different fields shown in each view."})}),"\n",(0,i.jsx)("img",{width:"355",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189100701-125b529b-5578-43ad-a707-e8c1738e788c.png"}),"\n",(0,i.jsx)(t.h2,{id:"sort",children:"Sort"}),"\n",(0,i.jsx)(t.p,{children:"Sorting allows you to order contents alphabetically (A \u2192 Z) / (Z \u2192 A)  (OR) in ascending / descending order. NocoDB allows nested sorting. You can choose column fields & order in which to apply nested sorting. Lookup, Formula, Nested Data are also supported in Sorting."}),"\n",(0,i.jsx)("img",{width:"462",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189100830-29b164a2-dd63-41f9-987a-09de53e0a0ec.png"}),"\n",(0,i.jsx)("img",{width:"473",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189100869-e458814c-ef9b-4d88-8d7c-4e7de0f3b416.png"}),"\n",(0,i.jsx)("img",{width:"607",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189100945-f2575174-f0d2-48e5-8b89-2d14baa873e5.png"}),"\n",(0,i.jsx)(t.h2,{id:"filter",children:"Filter"}),"\n",(0,i.jsxs)(t.p,{children:["Filters allow you to restrict / organize your data on the view as per your needs. NocoDB allows nested filters. You can choose multiple columns and conditions to apply filter. Between filters, you can opt for either ",(0,i.jsx)(t.code,{children:"and"})," or ",(0,i.jsx)(t.code,{children:"or"})," mode operation. Lookup, Formula, Nested Data are also supported in Filtering."]}),"\n",(0,i.jsx)("img",{width:"1011",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189102268-706ba965-e332-4c93-b2d2-ea04f0fabf11.png"}),"\n",(0,i.jsx)("img",{width:"1021",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189102641-bd4f64b1-21fc-42a0-bbe6-2a019e213eda.png"}),"\n",(0,i.jsx)(t.p,{children:"You can also group several filters together using Filter Group."}),"\n",(0,i.jsx)("img",{width:"1025",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189102932-aa0e31ef-554f-4e8b-ae0e-2024b7f4d35b.png"}),"\n",(0,i.jsx)(t.h3,{id:"enable-null-and-empty-filters",children:"Enable NULL and EMPTY Filters"}),"\n",(0,i.jsxs)(t.p,{children:["NULL filters (",(0,i.jsx)(t.code,{children:"is null"})," & ",(0,i.jsx)(t.code,{children:"is not null"}),") and EMPTY filters (",(0,i.jsx)(t.code,{children:"is empty"})," & ",(0,i.jsx)(t.code,{children:"is not empty"}),") are hidden by default. If you wish to filter out either one only, you may enable ",(0,i.jsx)(t.code,{children:"Show NULL and EMPTY Filter"})," in Project Settings."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://user-images.githubusercontent.com/35857179/219009085-0308b2a9-10af-4afe-84b6-df52e42fb1a8.png",alt:"image"})}),"\n",(0,i.jsx)(t.p,{children:"Otherwise, we can use Blank filters to filter out cells with NULL values and EMPTY values."}),"\n",(0,i.jsx)(t.h3,{id:"supported-filters",children:"Supported Filters"}),"\n",(0,i.jsx)(t.p,{children:"Currently we support different types of filters for corresponding columns. Please refer the below matrix for details."}),"\n",(0,i.jsx)("iframe",{width:"100%",height:"700vh",src:"https://docs.google.com/spreadsheets/d/e/2PACX-1vTpCNKtA-szaXUKJEO5uuSIRnzUOK793MKnyBz9m2rQcwn7HqK19jPHeER-IIRWH9X56J78wfxXZuuv/pubhtml?gid=427284630&single=true&widget=true&headers=false"})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);