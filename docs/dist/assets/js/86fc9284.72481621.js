"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[6905],{2268:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"setup-and-usages/link-to-another-record","title":"Link To Another Record","description":"Understanding Link To Another Record (LTAR) Columns!","source":"@site/versioned_docs/version-0.109.7/030.setup-and-usages/060.link-to-another-record.md","sourceDirName":"030.setup-and-usages","slug":"/setup-and-usages/link-to-another-record","permalink":"/0.109.7/setup-and-usages/link-to-another-record","draft":false,"unlisted":false,"editUrl":"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/versioned_docs/version-0.109.7/030.setup-and-usages/060.link-to-another-record.md","tags":[],"version":"0.109.7","sidebarPosition":60,"frontMatter":{"title":"Link To Another Record","description":"Understanding Link To Another Record (LTAR) Columns!"},"sidebar":"tutorialSidebar","previous":{"title":"Code Snippets","permalink":"/0.109.7/setup-and-usages/code-snippets"},"next":{"title":"Lookup","permalink":"/0.109.7/setup-and-usages/lookup"}}');var i=o(74848),s=o(28453);const l={title:"Link To Another Record",description:"Understanding Link To Another Record (LTAR) Columns!"},r=void 0,a={},d=[{value:"Relationship types:",id:"relationship-types",level:3},{value:"Adding a relationship",id:"adding-a-relationship",level:2},{value:"1. Create column",id:"1-create-column",level:3},{value:"2. Update column name",id:"2-update-column-name",level:3},{value:"3. Select column type",id:"3-select-column-type",level:3},{value:"4. Choose relationship type",id:"4-choose-relationship-type",level:3},{value:"5. Select child table from drop down menu",id:"5-select-child-table-from-drop-down-menu",level:3},{value:"6. Click on &#39;Save&#39;",id:"6-click-on-save",level:3},{value:"Updating linked records",id:"updating-linked-records",level:2},{value:"1. Open link record tab",id:"1-open-link-record-tab",level:3},{value:"2. Select from the option displayed",id:"2-select-from-the-option-displayed",level:3},{value:"3. Column mapping showing &quot;Has Many&quot; relationship",id:"3-column-mapping-showing-has-many-relationship",level:3},{value:"4. Column mapping for &quot;Belongs to&quot; relationship [Automatically updated]",id:"4-column-mapping-for-belongs-to-relationship-automatically-updated",level:3}];function c(e){const n={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"relationship-types",children:"Relationship types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["One to one","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Table record in first table is related to only one record of second table."}),"\n",(0,i.jsx)(n.li,{children:"Example: Country has a capital city"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["One to many","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Table record in first table is related to more than one record of second table. But second table record maps to only one entry of first table"}),"\n",(0,i.jsxs)(n.li,{children:["NocoDB refers to this category of relationship as ",(0,i.jsx)(n.strong,{children:"has many"})]}),"\n",(0,i.jsxs)(n.li,{children:["For every ",(0,i.jsx)(n.strong,{children:"has many"})," relation defined, NocoDB augments ",(0,i.jsx)(n.strong,{children:"belongs to"})," relationship column in the other table automatically"]}),"\n",(0,i.jsxs)(n.li,{children:["Example: Country ",(0,i.jsx)(n.strong,{children:"has many"})," Cities. (other way mapping > City ",(0,i.jsx)(n.strong,{children:"belongs to"})," Country )"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Many to many","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Table record in first table is related to more than one record of second table; second table record can also map to more than on record of first table."}),"\n",(0,i.jsxs)(n.li,{children:["NocoDB refers to this category of relationship as ",(0,i.jsx)(n.strong,{children:"many to many"})]}),"\n",(0,i.jsxs)(n.li,{children:["For every ",(0,i.jsx)(n.strong,{children:"many to many"})," relation defined between tables, NocoDB augments ",(0,i.jsx)(n.strong,{children:"many to many"})," relationship column in the other table automatically"]}),"\n",(0,i.jsxs)(n.li,{children:["Example: Film ",(0,i.jsx)(n.strong,{children:"has many"})," Actors. Actor ",(0,i.jsx)(n.strong,{children:"has many"})," Films (works on many films)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Further details of relationship types can be found ",(0,i.jsx)(n.a,{href:"https://afteracademy.com/blog/what-are-the-different-types-of-relationships-in-dbms",children:"here"})]}),"\n",(0,i.jsxs)(n.p,{children:["Relationships between table records can be established by using ",(0,i.jsx)(n.strong,{children:"LinkToAnotherRecord"})," column type.\nWorkflow details are captured below"]}),"\n",(0,i.jsx)(n.h2,{id:"adding-a-relationship",children:"Adding a relationship"}),"\n",(0,i.jsx)("img",{width:"1016",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189105583-20014dd9-e5a6-4f27-b03c-97fad9096b5f.png"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-column",children:"1. Create column"}),"\n",(0,i.jsx)(n.p,{children:"Click on '+' button at end of column headers"}),"\n",(0,i.jsx)(n.h3,{id:"2-update-column-name",children:"2. Update column name"}),"\n",(0,i.jsx)(n.p,{children:"Input name in the text box provided"}),"\n",(0,i.jsx)(n.h3,{id:"3-select-column-type",children:"3. Select column type"}),"\n",(0,i.jsx)(n.p,{children:'Select Column type as "LinkToAnotherRecord" from the drop-down menu'}),"\n",(0,i.jsx)(n.h3,{id:"4-choose-relationship-type",children:"4. Choose relationship type"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"'Has Many' corresponds to the 'One-to-many' relationships"}),"\n",(0,i.jsx)(n.li,{children:"'Many To Many' corresponds to the 'Many-to-many' relationships"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-select-child-table-from-drop-down-menu",children:"5. Select child table from drop down menu"}),"\n",(0,i.jsx)(n.h3,{id:"6-click-on-save",children:"6. Click on 'Save'"}),"\n",(0,i.jsx)(n.p,{children:"A new column will get created in both the parent table & child table"}),"\n",(0,i.jsx)(n.h2,{id:"updating-linked-records",children:"Updating linked records"}),"\n",(0,i.jsx)(n.h3,{id:"1-open-link-record-tab",children:"1. Open link record tab"}),"\n",(0,i.jsx)(n.p,{children:"Click on the '+' icon in corresponding row - cell"}),"\n",(0,i.jsx)("img",{width:"750",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106326-90e46156-798d-4a01-a4eb-4e991ce94c03.png"}),"\n",(0,i.jsx)(n.h3,{id:"2-select-from-the-option-displayed",children:"2. Select from the option displayed"}),"\n",(0,i.jsx)(n.p,{children:"Use 'Filter box' to narrow down on search items\nYou can opt to insert a new record as well, using \"+ New Record\" button"}),"\n",(0,i.jsx)("img",{width:"1014",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106494-4b49a200-a44f-41ae-8b54-93b18d867a04.png"}),"\n",(0,i.jsx)(n.h3,{id:"3-column-mapping-showing-has-many-relationship",children:'3. Column mapping showing "Has Many" relationship'}),"\n",(0,i.jsx)(n.p,{children:"Sheet1 'has many' Sheet2"}),"\n",(0,i.jsx)("img",{width:"756",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106702-3b8d7a50-08f4-4a04-b2cb-16db0cf667b3.png"}),"\n",(0,i.jsx)(n.h3,{id:"4-column-mapping-for-belongs-to-relationship-automatically-updated",children:'4. Column mapping for "Belongs to" relationship [Automatically updated]'}),"\n",(0,i.jsx)(n.p,{children:"Sheet2 'belongs to' Sheet1"}),"\n",(0,i.jsx)("img",{width:"574",alt:"image",src:"https://user-images.githubusercontent.com/35857179/189106731-59e5bc3c-bcc5-4796-b5b2-d9b5418bfe2b.png"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var t=o(96540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);