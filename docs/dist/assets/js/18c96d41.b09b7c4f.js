"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[919],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(96540);const l={},a=s.createContext(l);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},94898:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"fields/field-types/formula/conditional-expressions","title":"Conditional Expressions","description":"This article explains various conditional expressions that can be used in formula fields.","source":"@site/docs/070.fields/040.field-types/060.formula/050.conditional-expressions.md","sourceDirName":"070.fields/040.field-types/060.formula","slug":"/fields/field-types/formula/conditional-expressions","permalink":"/fields/field-types/formula/conditional-expressions","draft":false,"unlisted":false,"editUrl":"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/060.formula/050.conditional-expressions.md","tags":[{"inline":true,"label":"Fields","permalink":"/tags/fields"},{"inline":true,"label":"Field types","permalink":"/tags/field-types"},{"inline":true,"label":"Formula","permalink":"/tags/formula"}],"version":"current","sidebarPosition":50,"frontMatter":{"title":"Conditional Expressions","description":"This article explains various conditional expressions that can be used in formula fields.","tags":["Fields","Field types","Formula"],"keywords":["Fields","Field types","Formula","Create formula field","Conditional expressions"]},"sidebar":"tutorialSidebar","previous":{"title":"Date functions","permalink":"/fields/field-types/formula/date-functions"},"next":{"title":"Generic Functions","permalink":"/fields/field-types/formula/generic-functions"}}');var l=i(74848),a=i(28453);const r={title:"Conditional Expressions",description:"This article explains various conditional expressions that can be used in formula fields.",tags:["Fields","Field types","Formula"],keywords:["Fields","Field types","Formula","Create formula field","Conditional expressions"]},o=void 0,t={},d=[{value:"IF",id:"if",level:2},{value:"Syntax",id:"syntax",level:4},{value:"Sample",id:"sample",level:4},{value:"SWITCH",id:"switch",level:2},{value:"Syntax",id:"syntax-1",level:4},{value:"Sample",id:"sample-1",level:4},{value:"AND",id:"and",level:2},{value:"Syntax",id:"syntax-2",level:4},{value:"Sample",id:"sample-2",level:4},{value:"OR",id:"or",level:2},{value:"Syntax",id:"syntax-3",level:4},{value:"Sample",id:"sample-3",level:4},{value:"Related Articles",id:"related-articles",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"This cheat sheet provides a quick reference guide for various conditional expressions commonly used in data analysis and programming. Each expression is accompanied by its syntax, a sample usage, and a brief description."}),"\n",(0,l.jsx)(n.h2,{id:"if",children:"IF"}),"\n",(0,l.jsxs)(n.p,{children:["The IF function in programming and spreadsheet formulas provides a way to perform conditional operations. It evaluates a condition and returns a value if the condition is ",(0,l.jsx)(n.code,{children:"TRUE"}),", or another value if the condition is ",(0,l.jsx)(n.code,{children:"FALSE"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"IF(expr, successCase, elseCase)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"sample",children:"Sample"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"IF({field} > 1, Value1, Value2)\n\nOutput\n- `Value1` if `{field} > 1` evaluates to TRUE\n- `Value2` otherwise\n"})}),"\n",(0,l.jsx)(n.h2,{id:"switch",children:"SWITCH"}),"\n",(0,l.jsx)(n.p,{children:"The SWITCH function is a versatile tool for handling multiple cases. It evaluates the given expression (expr) against a series of patterns and returns the corresponding value of the first matching pattern. If none match, it returns the default value."}),"\n",(0,l.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"SWITCH(expr, [pattern, value, ..., default])\n"})}),"\n",(0,l.jsx)(n.h4,{id:"sample-1",children:"Sample"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"SWITCH({field}, 1, 'One', 2, 'Two', '--')\n\nOutput\nSwitch case value based on the output of `{field}`:\n- `'One'` if `{field} = 1`\n- `'Two'` if `{field} = 2`\n- `'--'` for the default case\n"})}),"\n",(0,l.jsx)(n.h2,{id:"and",children:"AND"}),"\n",(0,l.jsx)(n.p,{children:"The AND function is a logical operator that returns TRUE only if all its conditions are true."}),"\n",(0,l.jsx)(n.h4,{id:"syntax-2",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"AND(expr1, [expr2,...])\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Comparison operators : ",(0,l.jsx)(n.code,{children:"=="}),", ",(0,l.jsx)(n.code,{children:"!="}),", ",(0,l.jsx)(n.code,{children:">"}),", ",(0,l.jsx)(n.code,{children:"<"}),", ",(0,l.jsx)(n.code,{children:">="}),", ",(0,l.jsx)(n.code,{children:"<="})]}),"\n",(0,l.jsx)(n.h4,{id:"sample-2",children:"Sample"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"AND({field} > 2, {field} < 10)\n\nOutput\nTRUE if both `{field} > 2` and `{field} < 10` evaluate to TRUE\n"})}),"\n",(0,l.jsx)(n.h2,{id:"or",children:"OR"}),"\n",(0,l.jsx)(n.p,{children:"The OR function is another logical operator, returning TRUE if at least one of its conditions is true."}),"\n",(0,l.jsx)(n.h4,{id:"syntax-3",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"OR(expr1, [expr2,...])\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Comparison operators : ",(0,l.jsx)(n.code,{children:"=="}),", ",(0,l.jsx)(n.code,{children:"!="}),", ",(0,l.jsx)(n.code,{children:">"}),", ",(0,l.jsx)(n.code,{children:"<"}),", ",(0,l.jsx)(n.code,{children:">="}),", ",(0,l.jsx)(n.code,{children:"<="})]}),"\n",(0,l.jsx)(n.h4,{id:"sample-3",children:"Sample"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"OR({field} > 2, {field} < 10)\n\nOutput\nTRUE if at least one of the conditions `{field} > 2` or `{field} < 10` evaluates to TRUE\n"})}),"\n",(0,l.jsxs)(n.admonition,{type:"tip",children:[(0,l.jsxs)(n.p,{children:["Logical operators, along with Numerical operators can be used to build conditional ",(0,l.jsx)(n.code,{children:"expressions"}),"."]}),(0,l.jsx)(n.p,{children:"Examples:"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'IF({marksSecured} > 80, "GradeA", "GradeB")  \n'})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"SWITCH({quarterNumber},  \n    1, 'Jan-Mar',\n    2, 'Apr-Jun',\n    3, 'Jul-Sep',\n    4, 'Oct-Dec',\n    'INVALID'\n)\n"})})]}),"\n",(0,l.jsx)(n.h2,{id:"related-articles",children:"Related Articles"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/fields/field-types/formula/operators",children:"Numeric and Logical Operators"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/fields/field-types/formula/numeric-functions",children:"Numeric Functions"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/fields/field-types/formula/string-functions",children:"String Functions"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/fields/field-types/formula/date-functions",children:"Date Functions"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);