"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[2393],{2538:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>y,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"fields/primary-key","title":"Primary key","description":"This article explains what a primary key is and how it is used in NocoDB.","source":"@site/docs/070.fields/020.primary-key.md","sourceDirName":"070.fields","slug":"/fields/primary-key","permalink":"/fields/primary-key","draft":false,"unlisted":false,"editUrl":"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/020.primary-key.md","tags":[{"inline":true,"label":"Fields","permalink":"/tags/fields"},{"inline":true,"label":"Primary Key","permalink":"/tags/primary-key"}],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Primary key","description":"This article explains what a primary key is and how it is used in NocoDB.","tags":["Fields","Primary Key"],"keywords":["NocoDB primary key","primary key","primary key in NocoDB","primary key in database"]},"sidebar":"tutorialSidebar","previous":{"title":"Fields overview","permalink":"/fields/fields-overview"},"next":{"title":"Display value","permalink":"/fields/display-value"}}');var s=r(74848),t=r(28453);const a={title:"Primary key",description:"This article explains what a primary key is and how it is used in NocoDB.",tags:["Fields","Primary Key"],keywords:["NocoDB primary key","primary key","primary key in NocoDB","primary key in database"]},d="Primary Key",o={},l=[{value:"Use of Primary Key",id:"use-of-primary-key",level:2},{value:"Primary Key in NocoDB",id:"primary-key-in-nocodb",level:2}];function c(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"primary-key",children:"Primary Key"})}),"\n",(0,s.jsx)(i.p,{children:"A primary key is a special database table field designated to uniquely identify each table record."}),"\n",(0,s.jsx)(i.h2,{id:"use-of-primary-key",children:"Use of Primary Key"}),"\n",(0,s.jsx)(i.p,{children:"As it uniquely identifies an individual record of a table, it is used internally by NocoDB for all operations associated with a record"}),"\n",(0,s.jsx)(i.h2,{id:"primary-key-in-nocodb",children:"Primary Key in NocoDB"}),"\n",(0,s.jsx)(i.p,{children:"Primary Key that gets defined / used in NocoDB depends on how underlying table was created. Summary is captured below"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["From UI, Create new table / Import from Excel / Import from CSV","\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["An ",(0,s.jsx)(i.code,{children:"ID"})," [datatype: Integer] system field created by default during table creation is used as primary key"]}),"\n",(0,s.jsxs)(i.li,{children:["Additional system fields ",(0,s.jsx)(i.code,{children:"created-at"}),", ",(0,s.jsx)(i.code,{children:"updated-at"})," are inserted by default"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Connect to existing external database","\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Existing ",(0,s.jsx)(i.code,{children:"primary key"})," field defined for a table is retained as is; NocoDB doesn't insert a new ID field"]}),"\n",(0,s.jsxs)(i.li,{children:["Additional system fields ",(0,s.jsx)(i.code,{children:"created-at"}),", ",(0,s.jsx)(i.code,{children:"updated-at"})," are not inserted by default"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Import from Airtable","\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Airtable record ID is marked as primary key for imported records, and is mapped to field ",(0,s.jsx)(i.code,{children:"ncRecordId"}),"  [datatype: varchar]"]}),"\n",(0,s.jsx)(i.li,{children:"If a new record is inserted after migration & if ncRecordId field was omitted during record insertion - auto generated string will be inserted by NocoDB"}),"\n",(0,s.jsxs)(i.li,{children:["Computed hash value for the entire record is stored in system field ",(0,s.jsx)(i.code,{children:"ncRecordHash"})]}),"\n",(0,s.jsxs)(i.li,{children:["Additional system fields ",(0,s.jsx)(i.code,{children:"created-at"}),", ",(0,s.jsx)(i.code,{children:"updated-at"})," are not inserted by default"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Create new table using SDK / API","\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["No default primary key field is introduced by NocoDB. It has to be explicitly specified during table creation (using attribute ",(0,s.jsx)(i.code,{children:"pk: true"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"What if Primary Key was missing?"})}),(0,s.jsx)(i.p,{children:"It is possible to have a table without any primary key."}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"External database table can be created without primary key configuration."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"New table can be created using SDK / API without primary key"}),"\n",(0,s.jsx)(i.p,{children:"In such scenario's, new records can be created in NocoDB for this table, but records can't be updated or deleted as there is no way for NocoDB to uniquely identify these records"}),"\n"]}),"\n"]})]}),"\n",(0,s.jsxs)(i.admonition,{type:"info",children:[(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Can I change the Primary Key to another field within tables?"})}),(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["You can't update Primary Key from NocoDB UI. You can reconfigure it at database level directly & trigger ",(0,s.jsx)(i.code,{children:"meta sync"})," explicitly."]}),"\n"]})]})]})}function y(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,i,r)=>{r.d(i,{R:()=>a,x:()=>d});var n=r(96540);const s={},t=n.createContext(s);function a(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);